doctype html
html(lang='en')
  head
    title Accounts - PicoBudget - Expense tracking tool
    include includes/head.jade
  body
    include includes/dashboard_nav.jade
    .container
      section#content
        .row
          include includes/dashboard_sidebar.jade

          .span10
            h1 Accounts
            ul(style='padding-top:20px;').nav.nav-tabs#tabnav
              li#overviewlink
                a(href='#') Overview
              li#newlink
                a(href='#') New account
            #overview
              h3 Account overview
              .alert-success.alert#accountAdded
                strong Account added!
                br
                p Your new account was added.
              .alert-success.alert#accountEdited
                strong Account edited!
                br
                p Your account was updated.
              .alert-success.alert#accountDeleted
                strong Account deleted!
                br
                p Your account was successfully deleted.
              .alert-error.alert#fillInAllInfo
                strong Error!
                br
                p Please fill in all the information!
              .alert-error.alert#notEdited
                strong Error!
                br
                p This account could not be edited. Please try again!
              .alert-error.alert#notDeleted
                strong Error!
                br
                p This account could not be deleted. Please try again!
              .alert-error.alert#accountExists
                strong Error!
                br
                p There is already an account with this name. Please try another name!
              - if (locals.accounts.length > 0)
                table.table
                  thead
                    tr
                      th Name
                      th Currency
                      th(style='text-align:right;') Balance
                  tbody
                    for account in locals.accounts
                      tr
                        td #{account.name}
                        td #{account.curr}
                        td(style='text-align:right;') #{locals.formatAmount(account.bal)}
                        td(style='text-align:right;')
                          a(href='/accounts?editAccount=true&n=#{account.name}&b=#{account.bal}') Edit
                        td(style='text-align:right;')
                          a(style='color:red;', href='/accounts?deleteAccount=true&n=#{account.name}') Delete
                    tr(style='font-weight:bold;')
                      td
                      td Total (#{locals.user.curr}):
                      td(style='text-align:right;') #{locals.formatAmount(locals.balanceSum)}
                      td
                      td
              - else
                p There are no accounts to be displayed.

              h3(id='editaccounttitle') Edit account
              form.form-horizontal(id='editaccountform', method='POST', action='/accountEdited', onsubmit='return validateEditAccountForm();')
                fieldset
                  .control-group#cg-editname
                    label.control-label(for='editNameInput') Name
                    .controls
                      input.input-xlarge#editNameInput(type='text', name='editNameInput')
                  .control-group#cg-hiddenoldname
                    .controls
                      input.input-xlarge#hiddenOldName(type='hidden', name='hiddenOldName')
                  .control-group#cg-editinitialbalance
                    label.control-label(for='editInitBalanceInput') Balance
                    .controls
                      input.input-xlarge#editInitBalanceInput(type='text', name='editInitBalanceInput')
                  .control-group
                  .form-actions
                    button.btn.btn-info(type='submit') Edit account

              h2(id='deleteaccounttitle') Delete account
              form.form-horizontal(id='deleteaccountform', method='POST', action='/accountDeleted')
                fieldset
                  .control-group#cg-deletename
                    label.control-label(for='deleteNameInput') Name
                    .controls
                      input.input-xlarge.uneditable-input#deleteNameInput(type='text', name='deleteNameInput')
                  .control-group
                  .form-actions
                    button.btn.btn-warning(type='submit') Delete this account!
            #new
              h3(id='addaccounttitle') Add a new account
              form.form-horizontal(id='addaccountform', method='POST', action='/accountAdded', onsubmit='return validateAccountForm();')
                fieldset
                  .control-group#cg-name
                    label.control-label(for='nameInput') Name
                    .controls
                      input.input-xlarge#nameInput(type='text', name='nameInput')
                  .control-group#cg-currency
                    label.control-label(for='currDropdown') Currency
                    .controls
                      select(name='currDropdown')
                        for currency in locals.currencies
                          option(value='#{currency.ISO}') #{currency.ISO} - #{currency.name}
                  .control-group#cg-initialbalance
                    label.control-label(for='initBalanceInput') Initial balance
                    .controls
                      input.input-xlarge#initBalanceInput(type='text', name='initBalanceInput')
                  .control-group
                  .form-actions
                    button.btn.btn-info(type='submit') Add account

      include includes/footer.jade

    include includes/libs.jade

    script(type='text/javascript')
      $(function () {
        $('#new').hide();
        $('#overviewlink').addClass('active');

        $('#overviewlink').click(function (e) {
          e.preventDefault();
          $('#new').hide();
          $('#newlink').removeClass('active');
          $('#overviewlink').addClass('active');
          $('#overview').show();
          $('#overviewlink').addClass('active');
        });
        $('#newlink').click(function (e) {
          e.preventDefault();
          $('#overview').hide();
          $('#overviewlink').removeClass('active');
          $('#new').show();
          $('#newlink').addClass('active');
        });

        // hide all notifications and forms which should not be displayed
        if (typeof($.getUrlVar('accountAdded')) == 'undefined')
          $('#accountAdded').hide();
        if (typeof($.getUrlVar('accountEdited')) == 'undefined')
          $('#accountEdited').hide();
        if (typeof($.getUrlVar('notEdited')) == 'undefined')
          $('#notEdited').hide();
        if (typeof($.getUrlVar('accountAlreadyExists')) == 'undefined')
          $('#accountExists').hide();
        if (typeof($.getUrlVar('accountDeleted')) == 'undefined')
          $('#accountDeleted').hide();
        if (typeof($.getUrlVar('notDeleted')) == 'undefined')
          $('#notDeleted').hide();
        if (typeof($.getUrlVar('editAccount')) == 'undefined') {
          $('#editaccountform').hide();
          $('#editaccounttitle').hide();
        }
        if (typeof($.getUrlVar('deleteAccount')) == 'undefined') {
          $('#deleteaccountform').hide();
          $('#deleteaccounttitle').hide();
        }
        $('#fillInAllInfo').hide();

        // EDIT MODE
        if ($.getUrlVar('editAccount') == 'true') {
          $('#addaccounttitle').hide();
          $('#addaccountform').hide();
          $('#hiddenOldName').val($.getUrlVar('n'));
          $('#editNameInput').val($.getUrlVar('n'));
          $('#editInitBalanceInput').val($.getUrlVar('b'));
        }
          // DELETE MODE
        if ($.getUrlVar('deleteAccount') == 'true') {
          $('#addaccounttitle').hide();
          $('#addaccountform').hide();
          $('#deleteNameInput').val($.getUrlVar('n'));
        }
      })();


      // validate add account form
      function validateAccountForm() {
        var state = true;

        if ($('#nameInput').val() ==  '') {
          $('#cg-name').addClass('error');
          state = false;
        } else {
          $('#cg-name').removeClass('error');
        }

        if ($('#initBalanceInput').val() ==  '' || isNaN($('#initBalanceInput').val())) {
           $('#cg-initialbalance').addClass('error');
           state = false;
        } else {
           $('#cg-initialbalance').removeClass('error');
        }

        if (!state)
          $('#fillInAllInfo').show(); // not all info entered -> show error

        return state;
      }



      // validate edit account form
      function validateEditAccountForm() {
        var state = true;

        if ($('#editNameInput').val() ==  '') {
          $('#cg-editname').addClass('error');
          state = false;
        } else {
          $('#cg-editname').removeClass('error');
        }

        if ($('#editInitBalanceInput').val() ==  '' || isNaN($('#editInitBalanceInput').val())) {
           $('#cg-editinitialbalance').addClass('error');
           state = false;
        } else {
           $('#cg-editinitialbalance').removeClass('error');
        }

        if (!state)
          $('#fillInAllInfo').show(); // not all info entered -> show error

        return state;
      }
